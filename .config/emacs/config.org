#+TITLE: Configration Emacs Code

* init

** モダンなpackage manager の leaf を使用する

#+begin_src emacs-lisp :tangle yes
  (eval-and-compile
      (customize-set-variable
       'package-archives '(("gnu" . "https://elpa.gnu.org/packages/")
                           ("melpa" . "https://melpa.org/packages/")))
      (package-initialize)
      (use-package leaf :ensure t)

      (leaf leaf-keywords
        :ensure t
        :init
        (leaf blackout :ensure t)
        :config
        (leaf-keywords-init)))

  (leaf leaf-convert
    :doc "Convert many format to leaf format"
    :ensure t)
#+end_src


* vim 関連

** vim like な keybind

#+begin_src emacs-lisp :tangle yes
  (leaf evil
    :doc "vim like keybind"
    :ensure t
    :hook ((after-init-hook . evil-mode))
    :init
    (setq evil-want-C-u-scroll t))
#+end_src

* keybind

** (linux only) superkey を emacs の meta key として使用する

#+begin_src emacs-lisp :tangle yes
  (when (eq system-type 'gnu/linux)
    (setq x-super-keysym 'meta))
#+end_src

* org mode

** org file の 保存先

#+begin_src emacs-lisp :tangle yes
  (setq org-directory "~/dev/org-notes/")
  (setq org-default-notes-file "notes.org")
#+end_src

** Org-capture の 設定

*** キーバインド

#+begin_src emacs-lisp :tangle yes
  (define-key global-map "\C-cc" 'org-capture)
#+end_src


*** テンプレートメニューの設定

#+begin_src emacs-lisp :tangle yes
  (setq org-capture-templates
      '(("n" "日々の気づいたことをNote として Memo" entry (file+headline "~/dev/org-notes/notes.org" "Notes") "* %?\nEntered on %U\n %i\n %a")
        ("e" "emacs 関連の操作メモ" entry (file+headline "~/dev/org-notes/emacs.org" "Emacs-Notes") "* %?\n%U\n")
        ("j" "毎日の日記" entry (file+headline "~/dev/org-notes/journal.org" "Journal") "* %?\n%U\n")
        ))
#+end_src


* LSP 関連

** Emacs 標準の LSP client の eglot をいれる

#+begin_src emacs-lisp :tangle yes
  (leaf eglot
    :doc "lsp clinet"
    :ensure t
    :hook
    (python-mode . eglot-ensure)
    (sh-mode . eglot-ensure)
    )
#+end_src

#+RESULTS:
: eglot


* Color Themes

** doom emacs theme

#+begin_src emacs-lisp :tangle yes
  (leaf doom-themes
    :doc "emacs color theme"
    :ensure t
    :config
    (load-theme 'doom-tokyo-night t)
    (doom-themes-org-config)
    )
#+end_src

* treesitter

** treesit の install

#+begin_src emacs-lisp :tangle yes
  (leaf treesit
    :config
    (setq treesit-font-lock-level 4)
   )
#+end_src


** 自動でtreesitter の parser を install

#+begin_src emacs-lisp :tangle yes
  (leaf treesit-auto
    :ensure t
    :init
    (require 'treesit-auto)
    (global-treesit-auto-mode)
    :config
    (setq treesit-auto-install t)
   )
#+end_src


* filer(treemacs) の設定

** treemacs 本体


#+begin_src emacs-lisp :tangle yes
  (leaf treemacs
    :ensure t
    )   
#+end_src


** magit 連携

#+begin_src emacs-lisp :tangle yes
  (leaf treemacs-magit
    :after treemacs-magit
    :ensure t
    )   
#+end_src

* util 系

** Emacs外でファイルが更新されたときに、ファイルを読み込みし直す

#+begin_src emacs-lisp :tangle yes
  (leaf autorevert
    :doc "revert buffers when files on disk change"
    :global-minor-mode global-auto-revert-mode)
#+end_src


** 行数の表示

#+begin_src emacs-lisp :tangle yes
  (global-display-line-numbers-mode 1)
#+end_src

** 選択状態で入力したときに、選択範囲を消す

#+begin_src emacs-lisp :tangle yes
  (leaf delsel
    :doc "delete selection if you insert"
    :global-minor-mode delete-selection-mode)
#+end_src

** C-c t で ターミナル起動

#+begin_src emacs-lisp :tangle yes
  (global-set-key (kbd "C-c t") 'term)
#+end_src

** Emacs の 設定ファイルを reload する 関数の定義

#+begin_src emacs-lisp :tangle yes
  (defun reload-emacs ()
    "reload emacs config file"
    (interactive)
    (load-file (concat user-emacs-directory "init.el"))
    )
#+end_src
